{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d2f58a91",
   "metadata": {},
   "outputs": [],
   "source": [
    "from tabulate import tabulate\n",
    "contact_dict = {}\n",
    "\n",
    "\n",
    "def add_contact():\n",
    "    name = input(\"Enter contact name\")\n",
    "    number = input(\"Enter contact number\")\n",
    "    email = input(\"Enter contact email\")\n",
    "\n",
    "    contact_dict.update({name:(number,email)})\n",
    "\n",
    "\n",
    "def view_contact():\n",
    "    print(tabulate(contact_dict.items(), headers=[\"Contact Name\", \"Contact Details\"]))\n",
    "\n",
    "\n",
    "def search_contact():\n",
    "    s_name = input(\"Enter name of contact that you want to search\")\n",
    "    if s_name in contact_dict:\n",
    "        print(\"Contact is present in dictionary\")\n",
    "        print(contact_dict[s_name])\n",
    "\n",
    "    else:\n",
    "        print(\"Contact not present\")\n",
    "\n",
    "\n",
    "def delete_contact():\n",
    "    d_name = input(\"Enter name of contact that you want to delete\")\n",
    "    contact_dict.pop(d_name)\n",
    "\n",
    "\n",
    "def show_menu():\n",
    "    print(\"Press 1 to add contact\")\n",
    "    print(\"Press 2 to view contact\")\n",
    "    print(\"Press 3 to search contact\")\n",
    "    print(\"Press 4 to delete contact\")\n",
    "    print(\"Press 5 to exit\")\n",
    "\n",
    "\n",
    "def main():\n",
    "    show_menu()\n",
    "    while True:\n",
    "        choice = int(input(\"Enter your choice\"))\n",
    "\n",
    "        if choice == 1:\n",
    "            add_contact()\n",
    "        elif choice == 2:\n",
    "            view_contact()\n",
    "        elif choice == 3:\n",
    "            search_contact()\n",
    "        elif choice == 4:\n",
    "            delete_contact()\n",
    "        elif choice == 5:\n",
    "            break\n",
    "        else:\n",
    "            print(\"Invalid Choice\")\n",
    "\n",
    "main()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
